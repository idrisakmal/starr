services:
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    volumes:
      - ./overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped
    environment:
      - PGID=${GROUP_ID}
      - PUID=${USER_ID}
      - TZ=${TIMEZONE}
      - LOG_LEVEL=${LOG_LEVEL}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5055/api/v1/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    volumes:
      - ./sonarr:/config
      - ${MEDIA_DIR}:/data
    ports:
      - 8989:8989
    restart: unless-stopped
    environment:
      - PGID=${GROUP_ID}
      - PUID=${USER_ID}
      - TZ=${TIMEZONE}
      - LOG_LEVEL=${LOG_LEVEL}
      - SONARR_API_KEY=${SONARR_API_KEY}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8989/api/v3/health -H 'X-Api-Key: $$SONARR_API_KEY' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    volumes:
      - ./radarr:/config
      - ${MEDIA_DIR}:/data
    ports:
      - 7878:7878
    restart: unless-stopped
    environment:
      - PGID=${GROUP_ID}
      - PUID=${USER_ID}
      - TZ=${TIMEZONE}
      - LOG_LEVEL=${LOG_LEVEL}
      - RADARR_API_KEY=${RADARR_API_KEY}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7878/api/v3/health -H 'X-Api-Key: $$RADARR_API_KEY' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    volumes:
      - ./prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    environment:
      - PGID=${GROUP_ID}
      - PUID=${USER_ID}
      - TZ=${TIMEZONE}
      - LOG_LEVEL=${LOG_LEVEL}
      - PROWLARR_API_KEY=${PROWLARR_API_KEY}
    depends_on:
      - flaresolverr
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9696/api/v1/health -H \"X-Api-Key: $$PROWLARR_API_KEY\" || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
  recyclarr:
    image: recyclarr/recyclarr
    container_name: recyclarr
    volumes:
      - ./recyclarr:/config
    user: ${USER_ID}:${GROUP_ID}
    restart: unless-stopped
    read_only: true
    tmpfs: /tmp
    environment:
      - TZ=${TIMEZONE}
      - RECYCLARR_CREATE_CONFIG=true
      - SONARR_API_KEY=${SONARR_API_KEY}
      - RADARR_API_KEY=${RADARR_API_KEY}
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    ports:
      - 8191:8191
    restart: unless-stopped
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=${TIMEZONE}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8191/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
  config:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: config
    restart: "no"
    user: ${USER_ID}:${GROUP_ID}
    volumes:
      - ./overseerr:/app/overseerr
      - ./sonarr:/app/sonarr
      - ./radarr:/app/radarr
      - ./prowlarr:/app/prowlarr
    environment:
      - RADARR_API_KEY=${RADARR_API_KEY}
      - SONARR_API_KEY=${SONARR_API_KEY}
      - PROWLARR_API_KEY=${PROWLARR_API_KEY}
      - PROWLARR_URL=http://prowlarr:9696
      - FLARESOLVERR_URL=http://flaresolverr:8191
    depends_on:
      prowlarr:
        condition: service_healthy
      flaresolverr:
        condition: service_healthy
    command: ["--apply"]
  jellyseerr:
    image: fallenbagel/jellyseerr
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=${LOG_LEVEL}
      - TZ=${TIMEZONE}
      - PORT=5056
    ports:
      - 5056:5056
    volumes:
      - ./jellyseerr:/app/config
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5056/api/v1/status || exit 1
      start_period: 20s
      timeout: 3s
      interval: 15s
      retries: 3
    restart: unless-stopped
